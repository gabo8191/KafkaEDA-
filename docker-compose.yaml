services:
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - 29092:29092
    environment:
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: 'broker,controller'
      KAFKA_CONTROLLER_QUORUM_VOTERS: '1@kafka:29093'
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092,CONTROLLER://kafka:29093,PLAINTEXT_HOST://0.0.0.0:29092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: 'CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT'
      KAFKA_CONTROLLER_LISTENER_NAMES: 'CONTROLLER'
      KAFKA_INTER_BROKER_LISTENER_NAME: 'PLAINTEXT'
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LOG_DIRS: '/tmp/kraft-combined-logs'
      CLUSTER_ID: 'MkU3OEVBNTcwNTJENDM2Qk'
    command: >
      bash -c "
      if [ ! -f /tmp/kraft-combined-logs/meta.properties ]; then
        kafka-storage format --config /etc/kafka/server.properties --cluster-id=MkU3OEVBNTcwNTJENDM2Qk --standalone;
      fi &&
      /etc/confluent/docker/run &
      echo 'Waiting for Kafka to be ready...' &&
      while ! kafka-topics --bootstrap-server localhost:29092 --list > /dev/null 2>&1; do
        echo 'Kafka is not ready yet, waiting...' && sleep 5;
      done &&
      echo 'Creating topics...' &&
      kafka-topics --create --if-not-exists --bootstrap-server localhost:29092 --partitions 1 --replication-factor 1 --topic addcustomer_events &&
      kafka-topics --create --if-not-exists --bootstrap-server localhost:29092 --partitions 1 --replication-factor 1 --topic editcustomer_events &&
      kafka-topics --create --if-not-exists --bootstrap-server localhost:29092 --partitions 1 --replication-factor 1 --topic findcustomerbyid_events &&
      kafka-topics --create --if-not-exists --bootstrap-server localhost:29092 --partitions 1 --replication-factor 1 --topic findallcustomers_events &&
      kafka-topics --create --if-not-exists --bootstrap-server localhost:29092 --partitions 1 --replication-factor 1 --topic order_events &&
      kafka-topics --create --if-not-exists --bootstrap-server localhost:29092 --partitions 1 --replication-factor 1 --topic login_events &&
      echo 'Topics created successfully!' &&
      wait
      "
